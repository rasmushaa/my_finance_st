name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - stg

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Determine Environment
      id: determine-env
      run: |
        # Determine environment based on branch
        if [ "${{ github.ref_name }}" == "main" ]; then
          echo "STREAMLIT_ENV=prod" >> $GITHUB_ENV
        else
          echo "STREAMLIT_ENV=stg" >> $GITHUB_ENV
        fi
        echo "GCP_PROJECT_ID=rasmus-prod" >> $GITHUB_ENV

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_UTILS_SA }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker europe-north1-docker.pkg.dev

    - name: Build and Push Docker image
      run: |
        IMAGE_URI="europe-north1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/streamlit-images/st-workout-${{ env.STREAMLIT_ENV  }}:latest"
        docker build -t "$IMAGE_URI" .
        docker push "$IMAGE_URI"

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy st-workout-${{ env.STREAMLIT_ENV  }}  \
          --image "europe-north1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/streamlit-images/st-workout-${{ env.STREAMLIT_ENV  }}:latest" \
          --platform managed \
          --region europe-north1 \
          --port 8080 \
          --project "${{ env.GCP_PROJECT_ID }}" \
          --set-env-vars "STREAMLIT_ENV=${{ env.STREAMLIT_ENV }}"