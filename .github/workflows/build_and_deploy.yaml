name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - stg

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Determine Environment
      id: determine-env
      run: |
        # Determine environment based on branch
        if [ "${{ github.ref_name }}" == "main" ]; then
          echo "STREAMLIT_ENV=prod" >> $GITHUB_ENV
        else
          echo "STREAMLIT_ENV=stg" >> $GITHUB_ENV
        fi

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_DEPLOY_SA }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_LOCATION }}-docker.pkg.dev

    - name: Build and Push Docker image
      run: |
        IMAGE_URI="${{ secrets.GCP_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/streamlit-images/st-finance-${{ env.STREAMLIT_ENV  }}:latest"
        docker build -t "$IMAGE_URI" .
        docker push "$IMAGE_URI"

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy st-finance-${{ env.STREAMLIT_ENV  }}  \
          --image "${{ secrets.GCP_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/streamlit-images/st-finance-${{ env.STREAMLIT_ENV  }}:latest" \
          --platform managed \
          --region ${{ secrets.GCP_LOCATION }} \
          --port 8080 \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 1 \
          --project ${{ secrets.GCP_PROJECT_ID  }} \
          --service-account ${{ secrets.GCP_MY_FINANCE_SA_NAME }} \
          --set-env-vars STREAMLIT_ENV=${{ env.STREAMLIT_ENV }} \
          --set-env-vars GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }} \
          --set-env-vars GCP_LOCATION=${{ secrets.GCP_LOCATION }} \
          --set-env-vars GCP_BQ_DATASET=${{ secrets.GCP_BQ_DATASET }} \
          --set-env-vars GCP_CGS_BUCKET=${{ secrets.GCP_CGS_BUCKET }} \
          --set-env-vars GCP_CGS_BUCKET_DIR=${{ secrets.GCP_CGS_BUCKET_DIR }} 